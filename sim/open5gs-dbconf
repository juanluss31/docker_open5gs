#!/bin/bash

version=0.10.3

display_help() {
    echo "open5gs-dbconf: Open5GS Database Configuration Tool ($version)"
    echo "FLAGS: --db_uri=mongodb://localhost"
    echo "COMMANDS:" >&2
    echo "   remove {imsi}: removes a user from the database"
    echo "   reset: WIPES OUT the database and restores it to an empty default"
    echo "   help: displays this message and exits"
    echo "   add_ue_with_apn {imsi key opc apn}: adds a user to the database with a specific apn,"
    echo "   add_ue_with_slice {imsi key opc apn sst sd}: adds a user to the database with a specific apn, sst and sd"
    echo "   update_apn {imsi apn slice_num}: adds an APN to the slice number slice_num of an existent UE"
    echo "   update_slice {imsi apn sst sd}: adds an slice to an existent UE"
    echo "   showall: shows the list of subscriber in the db"
    echo "   showpretty: shows the list of subscriber in the db in a pretty json tree format"
    echo "   showfiltered: shows {imsi key opc apn ip} information of subscriber"
    echo "   ambr_speed {imsi dl_value dl_unit ul_value ul_unit}: Change AMBR speed from a specific user and the  unit values are \"[0=bps 1=Kbps 2=Mbps 3=Gbps 4=Tbps ]\""
    echo "   subscriber_status {imsi subscriber_status_val={0,1} operator_determined_barring={0..8}}: Change TS 29.272 values for Subscriber-Status (7.3.29) and Operator-Determined-Barring (7.3.30)"   
    echo "   install: installs mongosh"

}

MSISDN=(0001110 0001111 0001112 0001113 0001114 0001115 0001116 0001117 0001118 0001119)
KI=(1B7F04D495107F31E8DF29E5514F28CA 58D702BE6603FA099D468D1296BC4072 EFF1295624972C632BB70D7863A4FC9F C581839E3F6AB86EE564F74150BF5D28 804786B423891CF2A8FA8FBD45E9D237 D1DACEF6CFDEFB4A7B5F7C3225C4D676 32364C8E8C9162E0BFC4FBD7AEADB4AE 95B2689668A3C24443CF45CB7781F066 09498A36425BCE313DC932DEAC3D63CB E6E0652EA80C26E70F6F343BAB533C12)
OPC=(DD71BC1880AF9367E4A52ECABAC326FD 46FB1EA4A7A571F9DCF3E2ABC58FC9FD D97E5A24512DFAEDFE4EA3035AB8CFDE 02A9C1F2B246834BB64F023AA9595FDF F006BC07EC19D737CE0D042F7BBE79AC 8A9EED3E44D4C835121142641E7F836C 45F1BCC5F57668DEEC17C1D7B09C4811 577CB1FDAA2F8C39C4D7618D249C36E9 B8E26F33567C588E103D1BF5FE1F002D C7D61C44E23706765D0457A21A1B803A)
ID=(0000053530 0000053531 0000053532 0000053533 0000053534 0000053535 0000053536 0000053537 0000053538 0000053539)
MCC=001
MNC=01
$APN1=internet
$APN2=ims

addSubscriber() {
    mongosh --eval "db.subscribers.insertOne(
                {
                    \"_id\": new ObjectId(),
                    \"schema_version\": NumberInt(1),
                    \"imsi\": \"${MCC}${MNC}${IDs}\",
                    \"msisdn\": [\"${MSISDNs}\"],
                    \"imeisv\": [],
                    \"mme_host\": [],
                    \"mm_realm\": [],
                    \"purge_flag\": [],
                    \"slice\":[
                    {
                        \"sst\": NumberInt(1),
                        \"default_indicator\": true,
                        \"session\": [
                        {
                            \"name\" : \"$APN1\",
                            \"type\" : NumberInt(1),
                            \"qos\" :
                            { \"index\": NumberInt(9),
                                \"arp\":
                                {
                                    \"priority_level\" : NumberInt(8),
                                    \"pre_emption_capability\": NumberInt(1),
                                    \"pre_emption_vulnerability\": NumberInt(1)
                                }
                            },
                            \"ambr\":
                            {
                                \"downlink\":
                                {
                                    \"value\": NumberInt(1),
                                    \"unit\": NumberInt(3)
                                },
                                \"uplink\":
                                {
                                    \"value\": NumberInt(1),
                                    \"unit\": NumberInt(3)
                                }
                            },
                            \"pcc_rule\": [],
                            \"_id\": new ObjectId(),
                        },
                        {
                            \"name\" : \"$APN2\",
                            \"type\" : NumberInt(1),
                            \"qos\" :
                            { \"index\": NumberInt(5),
                                \"arp\":
                                {
                                    \"priority_level\" : NumberInt(1),
                                    \"pre_emption_capability\": NumberInt(1),
                                    \"pre_emption_vulnerability\": NumberInt(1)
                                }
                            },
                            \"ambr\":
                            {
                                \"downlink\":
                                {
                                    \"value\": NumberInt(1),
                                    \"unit\": NumberInt(3)
                                },
                                \"uplink\":
                                {
                                    \"value\": NumberInt(1),
                                    \"unit\": NumberInt(3)
                                }
                            },
                            \"pcc_rule\": [
                                {
                                    \"qos\" : {
                                        \"arp\": {
                                            \"priority_level\" : NumberInt(2),
                                            \"pre_emption_capability\": NumberInt(2),
                                            \"pre_emption_vulnerability\": NumberInt(2)
                                        },
                                        \"mbr\": {
                                            \"downlink\" : {
                                                \"value\": NumberInt(128),
                                                \"unit\": NumberInt(1)
                                            },
                                            \"uplink\" : {
                                                \"value\": NumberInt(128),
                                                \"unit\": NumberInt(1)
                                            }
                                        },
                                        \"gbr\": {
                                            \"downlink\" : {
                                                \"value\": NumberInt(128),
                                                \"unit\": NumberInt(1)
                                            },
                                            \"uplink\" : {
                                                \"value\": NumberInt(128),
                                                \"unit\": NumberInt(1)
                                            }
                                        },
                                        \"index\": NumberInt(1),
                                    },
                                    \"_id\": new ObjectId(),
                                    \"flow\": []
                                }
                            ],
                            \"_id\": new ObjectId(),
                        }],
                        \"_id\": new ObjectId(),
                    }],
                    \"security\":
                    {
                        \"k\" : \"${KIs}\",
                        \"op\" : null,
                        \"opc\" : \"${OPCs}\",
                        \"amf\" : \"8000\",
                    },
                    \"ambr\" :
                    {
                        \"downlink\" : { \"value\": NumberInt(1), \"unit\": NumberInt(3)},
                        \"uplink\" : { \"value\": NumberInt(1), \"unit\": NumberInt(3)}
                    },
                    \"access_restriction_data\": 32,
                    \"network_access_mode\": 0,
                    \"subscriber_status\": 0,
                    \"operator_determined_barring\": 0,
                    \"subscribed_rau_tau_timer\": 12,
                    \"__v\": 0
                }
                );" $DB_URI 
}

while test $# -gt 0; do
  case "$1" in
    --db_uri*)
      DB_URI=`echo $1 | sed -e 's/^[^=]*=//g'`
      shift
      ;;
    *)
      break
      ;;
  esac
done

DB_URI="${DB_URI:-mongodb://172.22.0.2/open5gs}"

if [ "$#" -lt 1 ]; then
    display_help
    exit 1
fi

if [ "$1" = "help" ]; then
    display_help
    exit 1
fi

if [ "$1" = "remove" ]; then
    if [ "$#" -ne 2 ]; then
        echo "open5gs-dbctl: incorrect number of args, format is \"open5gs-dbctl remove imsi\""
        exit 1
    fi

    IMSI=$2
    mongosh --eval "db.subscribers.deleteOne({\"imsi\": \"$IMSI\"});" $DB_URI
    exit $?
fi

if [ "$1" = "reset" ]; then
    if [ "$#" -ne 1 ]; then
        echo "open5gs-dbctl: incorrect number of args, format is \"open5gs-dbctl reset\""
        exit 1
    fi

    mongosh --eval "db.subscribers.deleteMany({});" $DB_URI
    exit $?
fi

if [ "$1" = "add" ]; then
    if [ "$#" -eq 2 ]; then

        if [[ -n $2 && 0 -le $2 && $2 -le 9 ]]; then   

            IDs=${ID[$2]}
            MSISDNs=${MSISDN[$2]}
            KIs=${KI[$2]}
            OPCs=${OPC[$2]}

            echo "Adding subscriber:"
            echo "  IMSI: ${MCC}${MNC}${IDs}"
            echo "  MSISDN: ${MSISDNs}"
            echo "  KI: ${KIs}"
            echo "  OPC: ${OPCs}"

            #addSubscriber
            exit $?

        fi

        if [ "$2" = "all" ]; then
            
            for i in {0..9}
                IDs=${ID[$i]}
                MSISDNs=${MSISDN[$i]}
                KIs=${KI[$i]}
                OPCs=${OPC[$i]}

                echo "Adding subscriber:"
                echo "  IMSI: ${MCC}${MNC}${IDs}"
                echo "  MSISDN: ${MSISDNs}"
                echo "  KI: ${KIs}"
                echo "  OPC: ${OPCs}"

                #addSubscriber
            exit 1
        fi

        echo "open5gs-dbctl: incorrect number of args, format is \"open5gs-dbconf add [0-9/all]\""
        exit 1
    fi

    echo "open5gs-dbctl: incorrect number of args, format is \"open5gs-dbconf add [0-9/all]\""
    exit 1
fi

if [ "$1" = "subscriber_status" ]; then
    if [ "$#" -eq 4 ]; then
        IMSI=$2
        SUB_STATUS=$3
        OP_DET_BARRING=$4
        mongosh --eval "db.subscribers.updateOne({ \"imsi\": \"$IMSI\"},
            {\$set: { \"subscriber_status\": $SUB_STATUS,
                      \"operator_determined_barring\": $OP_DET_BARRING
                    }
            });" $DB_URI
        exit $?
    fi
    echo "open5gs-dbctl: incorrect number of args, format is \"open5gs-dbctl subscriber_status imsi subscriber_status_val={0,1} operator_determined_barring={0..8}"
    exit 1
fi
if [ "$1" = "showall" ]; then
   mongosh --eval "db.subscribers.find()" $DB_URI
        exit $?
fi
if [ "$1" = "showpretty" ]; then
   mongosh --eval "db.subscribers.find().pretty()" $DB_URI
        exit $?
fi
if [ "$1" = "showfiltered" ]; then
   mongosh --eval "db.subscribers.find({},{'_id':0,'imsi':1,'security.k':1, 'security.opc':1,'slice.session.name':1,'slice.session.ue.ipv4':1})" $DB_URI
        exit $?
fi

if [ "$1" = "install" ]; then

    wget https://downloads.mongodb.com/compass/mongodb-mongosh_2.1.4_amd64.deb
    sudo dpkg -i mongodb-mongosh_2.1.4_amd64.deb
    rm mongodb-mongosh_2.1.4_amd64.deb
    
    exit 1
fi

display_help
