#!/bin/bash

MCC=001
MNC=01
KIC1=(941DC7B74BEDC136A643CA3621D3772C 808129832B805C59799E82D712DB6421 68BC0B326B792E603B06C3FDCDD4C9BD E688922CA449BE8FCC0272FD4CC2796A 974C94E3B17F8F896FAB46DF48B8DF75 8E53A004B71769FDA6577B65460A3E48 A5F3AB6E6BF4E362479168B7D73E3D2B ADC6B83308091044D3D3513995A28653 4A4C99642BA8D7F0D8F3E5FCF902F997 D4FB40C3C732B1AECFCE3A7591B937D8)
OPC=(DD71BC1880AF9367E4A52ECABAC326FD 46FB1EA4A7A571F9DCF3E2ABC58FC9FD D97E5A24512DFAEDFE4EA3035AB8CFDE 02A9C1F2B246834BB64F023AA9595FDF F006BC07EC19D737CE0D042F7BBE79AC 8A9EED3E44D4C835121142641E7F836C 45F1BCC5F57668DEEC17C1D7B09C4811 577CB1FDAA2F8C39C4D7618D249C36E9 B8E26F33567C588E103D1BF5FE1F002D C7D61C44E23706765D0457A21A1B803A)
ID=(0000053530 0000053531 0000053532 0000053533 0000053534 0000053535 0000053536 0000053537 0000053538 0000053539)

display_help() {
    echo "pyhss-dbconf: PyHSS Database Configuration Tool"
    echo "FLAGS: --db_ip=127.0.0.1"
    echo "COMMANDS:" >&2
    echo "   apn"
    echo "      apn put [APN]: Create new APN"
    echo "      apn list: List all APNs"
    echo "      apn get: Get all APNs info"
    echo "      apn get [APN_id]: Get data for specified APN"
    echo "      apn delete [APN_id]: Delete specified APN"
    echo "   auc"
    echo "      auc put [IMSI last number (0-9)]"
    echo "      auc list: List all AUCs"
    echo "      auc delete [AUC_id]: Delete specified AUC"
    echo "      auc get [AUC_id]: Get data for specified AUC"
    echo "   install: installs jq (needed to process JSON)"

}

JSON='[{"ip_version": 0, "apn_id": 6, "sgw_address": null, "apn_ambr_dl": 0, "qci": 9, "arp_preemption_capability": false, "arp_preemption_vulnerability": true, "last_modified": "2024-02-15T11:58:00Z", "pgw_address": null, "apn": "pru", "charging_characteristics": "0800", "apn_ambr_ul": 0, "arp_priority": 4, "charging_rule_list": null}]'

while test $# -gt 0; do
  case "$1" in
    --db_ip*)
      DB_IP=`echo $1 | sed -e 's/^[^=]*=//g'`
      shift
      ;;
    *)
      break
      ;;
  esac
done

DB_IP="127.0.0.1"

if [ "$1" = "apn" ]; then

    if [ "$2" = "get" ]; then
        if [ "$#" -ne 2 ]; then
            curl -s -X 'GET' \
                "http://$DB_IP:8080/apn/$3" \
                -H 'accept: application/json' | jq .
            exit $?
        fi
        curl -s -X 'GET' \
            "http://$DB_IP:8080/apn/list?page=0&page_size=200" \
            -H 'accept: application/json' | jq .
        exit $?
    fi

    if [ "$2" = "list" ]; then
        curl -s -X 'GET' \
            "http://$DB_IP:8080/apn/list?page=0&page_size=200" \
            -H 'accept: application/json' | jq ".[] | {apn, apn_id}"

        exit 1
    fi

    if [ "$2" = "put" ]; then
        if [[ -n $3 ]]; then
            APNID=$(curl -s -X 'PUT' \
                "http://$DB_IP:8080/apn/" \
                -H 'accept: application/json' \
                -H 'Content-Type: application/json' \
                -d "{ \
                \"apn\": \"${3}\", \
                \"apn_ambr_dl\": 0, \
                \"apn_ambr_ul\": 0 \
            }" | jq .apn_id)
            echo "APN $3 has id: $APNID"
            exit $?
        fi
        echo "      apn put [APN]: Create new APN"
        exit $?
    fi

    if [ "$2" = "delete" ]; then
        if [[ -n $3 ]]; then
            curl -s -X 'DELETE' \
                "http://$DB_IP:8080/apn/$3" \
                -H 'accept: application/json' | jq .
            exit $?
        fi
        echo "      apn delete [APN_id]: Delete specified APN"
        exit $?
    fi

    display_help
    exit 1
fi

if [ "$1" = "auc" ]; then
    if [ "$2" = "get" ]; then
        curl -s -X 'GET' \
            "http://$DB_IP:8080/auc/$3" \
            -H 'accept: application/json' | jq .
        exit $?
    fi

    if [ "$2" = "list" ]; then
        curl -s -X 'GET' \
            "http://$DB_IP:8080/auc/list?page=0&page_size=200" \
            -H 'accept: application/json' | jq ".[] | {imsi, auc_id}"
        exit 1
    fi

    if [ "$2" = "put" ]; then
        if [[ -n $3 ]]; then
            APNID=$(curl -s -X 'PUT' \
                "http://$DB_IP:8080/auc/" \
                -H 'accept: application/json' \
                -H 'Content-Type: application/json' \
                -d "{ \
                \"ki\": \"${KIC1[$3]}\", \
                \"opc\": \"${OPC[$3]}\", \
                \"amf\": "8000", \
                \"sqn\": 0, \
                \"imsi\": \"${MCC}${MNC}${ID[$3]}\" \
            }" | jq .auc_id)
            echo "IMSI ${MCC}${MNC}${ID[$3]} has id: $APNID"
            exit $?
        fi
        echo "      auc put [IMSI last number (0-9)]: Create new AUC"
        exit $?
    fi

    if [ "$2" = "delete" ]; then
        if [[ -n $3 ]]; then
            curl -s -X 'DELETE' \
                "http://$DB_IP:8080/auc/$3" \
                -H 'accept: application/json' | jq .
            exit $?
        fi
        echo "      apn delete [APN_id]: Delete specified APN"
        exit $?
    fi

    display_help
    exit 1
fi

if [ "$1" = "install" ]; then
    sudo apt-get install -y jq
    exit 1
fi

display_help

